# file=docker-install.yml
# This playbook installs Docker on an Ubuntu system, configures it, and tests the installation.

---
- name: Install and configure Docker
  hosts: localhost
  become: true
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - curl
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - gnupg-agent
        state: present
        update_cache: yes

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker-ce

    - name: Install Docker Engine
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Add current user to docker group
      user:
        name: "{{ lookup('env','USER') }}"
        groups: docker
        append: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      debug:
        msg: "Docker installed: {{ docker_version.stdout }}"

    - name: Test Docker with hello-world
      command: docker run --rm hello-world
      register: hello_test
      ignore_errors: yes  # Continue even if test fails

    - name: Show test results
      debug:
        msg: "{{ hello_test.stdout }}"
      when: hello_test is success

    - name: Inform user to re-login for group changes
      debug:
        msg: "You must log out and log back in (or restart your session) for Docker group membership to take effect."