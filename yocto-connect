#!/bin/bash
# Helper script for connecting to the Yocto container with detach support

CONTAINER_NAME="${1:-yocto_container}"

# Check if container exists
if ! docker ps -a --format '{{.Names}}' | grep -w "^$CONTAINER_NAME$" > /dev/null; then
    echo "Container '$CONTAINER_NAME' does not exist"
    exit 1
fi

# Check if container is running
if ! docker ps --format '{{.Names}}' | grep -w "^$CONTAINER_NAME$" > /dev/null; then
    echo "Container '$CONTAINER_NAME' is not running"
    echo "Starting container..."
    docker start "$CONTAINER_NAME"
    sleep 1
fi

# Add container commands before connecting
if [ -f "$(dirname "$0")/add-commands-to-container.sh" ]; then
    echo "Ensuring container commands are available..."
    # For CROPS/poky containers, use root as the user
    bash "$(dirname "$0")/add-commands-to-container.sh" "$CONTAINER_NAME" "root"
fi

# Connect to the container
echo "Connecting to $CONTAINER_NAME..."
docker exec -it "$CONTAINER_NAME" bash

# Define functions - these are only used locally if the container doesn't have its own
function container-detach() {
  echo "Detaching from container (container keeps running)..."
  echo "Container will continue running in the background."
  touch /workdir/.container_detach_requested 2>/dev/null || touch /tmp/.container_detach_requested
  exit 0
}

# For backwards compatibility
function detach() {
  container-detach
}
